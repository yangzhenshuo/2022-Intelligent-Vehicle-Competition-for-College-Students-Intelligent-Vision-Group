
rt_thread_create()//属于动态创建牺牲时间换取空间

rt_thread_init()//属于静态创建牺牲空间换取时间

1 OS tick = 1/ RT_TICK PERSECOND秒，RT_TICK_PER_SECOND值在rtconfig.h文件中定义

线程间的通讯

1.警告: 由于关闭中断会导致整个系统不能响应外部中断，所以在使用关闭中断做为互斥访问临界区的手段时，首先必须需要保证关闭中断的时间非常短，例如数条机器指 令。

2.为了保证一行代码（例如赋值）的互斥运行，最快速的方法是使用中断锁而不是信号量或互斥量：

3.所以在使用调度器上锁的方式进行任务同步时，需要考虑好任务访问的临界 资源是否会被中断服务例程所修改，如果可能会被修改，那么将不适合采用此种方式进行同 步。

4.线程同步是信号量最简单的一类应用。例如，两个线程用来进行任务间的执行控制转 移，信号量的值初始化成具备0个信号量资源实例，而等待线程先直接在这个信号量上进行 等待。

5.另外需要切记的是互斥量不能在中断服务例程中使用。

6.事件主要用于线程间的同步，与信号量不同，它的特点是可以实现一对多，多对多的同步。

7.事件另外一个特性是，接收线程可等待多种事件，即多个事件 对应一个线程或多个线程。同时按照线程等待的参数，可选择是“逻辑或”触发还是“逻辑 与”触发。这个特性也是信号量等所不具备的，信号量只能识别单一的释放动作，而不能同 时等待多种类型的释放。

8.邮箱服务是实时操作系统中一种典型的任务间通信方法，特点是开销比较低，效率较 高。邮箱中的每一封邮件只能容纳固定的4字节内容

9.当需要在线程间传递比较大的消息时，可以把指向一个缓冲区 的指针作为邮件发送到邮箱中。

10.邮箱是一种简单的线程间消息传递方式，在RT-Thread操作系统的实现中能够一次传递 4字节邮件，并且邮箱具备一定的存储功能，能够缓存一定数量的邮件数(邮件数由创建、初 始化邮箱时指定的容量决定)。

11.消息队列是另一种常用的线程间通讯方式，它能够接收来自线程或中断服务例程中不固 定长度的消息，并把消息缓存在自己的内存空间中。消息队列是一种异步的通信方式。

12.当有多个消息发送到消息队列时，通常应将先进入消息队列的消息先传给线程，也就是说，线程先 得到的是最先进入消息队列的消息，即先进先出原则(FIFO)。

13.消息队列可以应用于发送不定长消息的场合，包括线程与线程间的消息交换，以及中断 服务例程中发送给线程的消息（中断服务例程不可能接收消息）。

14.RTthread中tshell的优先级在rtconfig.h的文件中#define FINSH_THREAD_PRIORITY 5
